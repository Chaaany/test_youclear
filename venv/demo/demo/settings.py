"""
Django settings for demo project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8cp4*w(gq3479d&e_r41!sk9%j63=n1)4bka**+umv+@q2fg%c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'youtuber',
    'widget_tweaks',
    'taggit',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'demo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # 커스텀한 비밀번호 validator 설정
    {
        "NAME": "youtuber.validators.CustomPasswordValidator"
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

# 이미지필드 구현
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'

# 태그기능 구현
TAGGIT_CASE_INSENSITIVE=True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 로그인 기능 구현용 설정(필수로 설정해줘야함)
AUTH_USER_MODEL = 'youtuber.User'

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

# 로그인, 회원가입 리다이렉트 페이지
ACCOUNT_SIGNUP_REDIRECT_URL = "index"
LOGIN_REDIRECT_URL = "index"

# 로그아웃 시 바로 로그아웃 여부
ACCOUNT_LOGOUT_ON_GET = True

# 로그인을 이메일 or 아이디 둘다 허용 = username_email, 이메일 = email
ACCOUNT_AUTHENTICATION_METHOD = "username_email"

# 회원가입시 이메일 필수 입력 / 아이디 필수 입력 / 아이디 False일경우 이메일 @의 앞부분
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False

# 로그인 유지 여부 설정
ACCOUNT_SEESION_REMEMBER = True

# 세션 쿠키 만료 기한 설정(초 단위 : 2주가 default)
# 로그아웃시에는 쿠키 삭제되지만, 쿠키 만료 후에 남은 쿠키들 쌓이면 서버 느려지므로 python manage.py clearsessions 자동화 삭제해주기
SESSIONM_COOKIE_AGE = 3600

# 커스텀 회원가입 폼 사용 설정
ACCOUNT_SIGNUP_FORM_CLASS = "youtuber.forms.SignupForm"

# 회원가입 오류 발생 시 비밀번호 유지
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = True

# 이메일 인증 기능 mandatory(필수), optional(기본값/인증X->로그인 가능), none(인증 필요x, 이메일 발송x)
ACCOUNT_EMAIL_VERIFICATION = "optional"
# 이메일 인증 확인 버튼 클릭 시 인증완료 알림 페이지로 이동
ACCOUNT_CONFIRM_EMAIL_ON_GET = True

# 인증 완료 페이지에서 로그인 되어있을 때와 로그이 되어 있지 않은 경우 각각 설정
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = "account_email_confirmation_done"
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = "account_email_confirmation_done"

# 비밀번호 재설정 유효 기간 설정 기본값 3일 
#   - django 3.0 이전 버전에서는 PASSWORD_RESET_TIMEOUT_DAYS (단위: 일)
#   - django 3.1 이후 버전에서는 PASSWORD_RESET_TIMOUT (단위: 초)
PASSWORD_RESET_TIMOUT = 3600

# 인증 이메일 제목에 도메인 제외
ACCOUNT_EMAIL_SUBJECT_PREFIX = ""

# Email settings
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
